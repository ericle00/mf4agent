import streamlit as st
from gui.keys.st_ss import ST_SS

from gui.layout.side_bar.model_availability_tab.main_render import check_available_index 
# .88b  d88.  .d8b.  d888888b d8b   db      d8888b. d88888b d8b   db d8888b. d88888b d8888b. 
# 88'YbdP`88 d8' `8b   `88'   888o  88      88  `8D 88'     888o  88 88  `8D 88'     88  `8D 
# 88  88  88 88ooo88    88    88V8o 88      88oobY' 88ooooo 88V8o 88 88   88 88ooooo 88oobY' 
# 88  88  88 88~~~88    88    88 V8o88      88`8b   88~~~~~ 88 V8o88 88   88 88~~~~~ 88`8b   
# 88  88  88 88   88   .88.   88  V888      88 `88. 88.     88  V888 88  .8D 88.     88 `88. 
# YP  YP  YP YP   YP Y888888P VP   V8P      88   YD Y88888P VP   V8P Y8888D' Y88888P 88   YD 
                                                                                           
                                                                                           

def render_system_instruction_planner_tab(tab) -> None:
    """
    Renders the System Instruction Planner tab in the Streamlit gui.

    Parameters:
    tab (st.tabs): The Streamlit tab object to render the System Instruction Planner tab in.

    Returns:
    None
    """
    st_ss = st.session_state
    NONE_STR = "None"
    
    # Check if selected mf4 file
    filename_key = st_ss[ST_SS.SELECTED_MF4_FILE_KEY]
    mf4_file_disabled = filename_key == NONE_STR
    
    with tab:
        render_planner_selection(st_ss, mf4_file_disabled)
        render_model_settings_sliders(mf4_file_disabled)
        render_planner_system_instruction(st_ss, mf4_file_disabled)



# .d8888. d88888b db      d88888b  .o88b. d888888b d888888b  .d88b.  d8b   db 
# 88'  YP 88'     88      88'     d8P  Y8 `~~88~~'   `88'   .8P  Y8. 888o  88 
# `8bo.   88ooooo 88      88ooooo 8P         88       88    88    88 88V8o 88 
#   `Y8b. 88~~~~~ 88      88~~~~~ 8b         88       88    88    88 88 V8o88 
# db   8D 88.     88booo. 88.     Y8b  d8    88      .88.   `8b  d8' 88  V888 
# `8888Y' Y88888P Y88888P Y88888P  `Y88P'    YP    Y888888P  `Y88P'  VP   V8P 
                                                                            
                                                                 

def render_planner_selection(st_ss, mf4_file_disabled: bool):
    """
    Renders the Code Interpreter selection section.

    Parameters:
    mf4_file_disabled (bool): A flag indicating whether the MF4 file is disabled.

    Returns:
    None
    """
    st.subheader("Planner üß†")
    
    decoder_models_status: dict = st_ss[ST_SS.DECODER_MODELS_STATUS]
    
    decoder_models_status_options = [f'{model} {content["text"]}' for model, content in decoder_models_status.items()]
    index = check_available_index(decoder_models_status)
    
    st.selectbox(
        label="Selected Planner", 
        options=decoder_models_status_options,
        index=index, 
        disabled=mf4_file_disabled,
        help="Select model for generating the plan.",  
        key=ST_SS.SELECTED_PLANNER_KEY
    )




# .88b  d88.  .d88b.  d8888b. d88888b db           .d8888. d88888b d888888b d888888b d888888b d8b   db  d888b  
# 88'YbdP`88 .8P  Y8. 88  `8D 88'     88           88'  YP 88'     `~~88~~' `~~88~~'   `88'   888o  88 88' Y8b 
# 88  88  88 88    88 88   88 88ooooo 88           `8bo.   88ooooo    88       88       88    88V8o 88 88      
# 88  88  88 88    88 88   88 88~~~~~ 88             `Y8b. 88~~~~~    88       88       88    88 V8o88 88  ooo 
# 88  88  88 `8b  d8' 88  .8D 88.     88booo.      db   8D 88.        88       88      .88.   88  V888 88. ~8~ 
# YP  YP  YP  `Y88P'  Y8888D' Y88888P Y88888P      `8888Y' Y88888P    YP       YP    Y888888P VP   V8P  Y888P  
                                                                                                             
                                                                                                             

def render_model_settings_sliders(mf4_file_disabled: bool):
    """
    Render sliders for model settings and a button to reset to default values.
    Args:
        mf4_file_disabled (bool): Flag to disable sliders and button if True.
    """
    st_ss = st.session_state

    # Sliders for setting generation parameters
    st.slider(label="max_tokens", 
                min_value=0, max_value=4096, step=1, value=4096,
                disabled=mf4_file_disabled,
                help="Max token generated by the llm.",
                key=ST_SS.PLANNER_MAX_TOKENS_KEY)
    
    st.slider(label="temperature", 
                min_value=0.0, max_value=1.0, step=0.01, value=0.0,
                disabled=mf4_file_disabled,
                help="Creativity and diversity control. Lower means deterministic and higher more creative.", 
                key=ST_SS.PLANNER_TEMPERATURE_KEY)
    
    st.slider(label="top_p", 
            min_value=0.0, max_value=1.0, step=0.01, value=1.0,
            disabled=mf4_file_disabled,
            help="Diversity control. Higher value means broader range consideration of tokens.", 
            key=ST_SS.PLANNER_TOP_P_KEY)
    
    st.slider(label="top_k", 
            min_value=0, max_value=100, step=1, value=50,
            disabled=mf4_file_disabled, 
            help="Restricts word selection during text generation to the top-k most probable words",
            key=ST_SS.PLANNER_TOP_K_KEY)


    # Button to set default values
    def reset_generation_settings():
        """Reset model settings to default."""
                            
        ### Generation
        st_ss[ST_SS.PLANNER_MAX_TOKENS_KEY] = 4096
        st_ss[ST_SS.PLANNER_TEMPERATURE_KEY] = 0.1
        st_ss[ST_SS.PLANNER_TOP_P_KEY] = 1.0 
        st_ss[ST_SS.PLANNER_TOP_K_KEY] = 50
        
    st.button(label="Set default model parameters", 
              on_click=reset_generation_settings, 
              type="secondary", use_container_width=True, 
              help="Reset the sliders to default.",
              disabled=mf4_file_disabled)  # Button to trigger reset
    
    
        
# d8888b. db       .d8b.  d8b   db d8b   db d88888b d8888b. 
# 88  `8D 88      d8' `8b 888o  88 888o  88 88'     88  `8D 
# 88oodD' 88      88ooo88 88V8o 88 88V8o 88 88ooooo 88oobY' 
# 88~~~   88      88~~~88 88 V8o88 88 V8o88 88~~~~~ 88`8b   
# 88      88booo. 88   88 88  V888 88  V888 88.     88 `88. 
# 88      Y88888P YP   YP VP   V8P VP   V8P Y88888P 88   YD 
                                                          
                                                          
def render_planner_system_instruction(st_ss, mf4_file_disabled: bool)  -> None:
    """
    Renders the planner system instruction section.

    Parameters:
    st_ss (st.session_state): The Streamlit session state object.
    mf4_file_disabled (bool): A flag indicating whether the MF4 file is disabled.

    Returns:
    None
    """
    # Button to set default values
    def reset_planner_system_instruction() -> None:
        st_ss[ST_SS.SYSTEM_INSTRUCTION_PLANNER_KEY] = st_ss[ST_SS.SYSTEM_INSTRUCTION_PLANNER_DEFAULT_KEY]
    
    # Header
    st.subheader("Planner Generic ‚öôÔ∏è", divider="rainbow")
    
    # Text area display
    st.text_area(label="System Instruction", label_visibility="visible",
                    height=500, disabled=mf4_file_disabled,
                    value=st_ss[ST_SS.SYSTEM_INSTRUCTION_PLANNER_DEFAULT_KEY],
                    help="System instruction for the Planner. Click CTRL + Enter to apply changes.",
                    key=ST_SS.SYSTEM_INSTRUCTION_PLANNER_KEY)
    
    # Reset default button
    st.button(label="Set default generic planning instruction üí°", 
              type="primary", on_click=reset_planner_system_instruction, 
              help="Reset the system instruction to default.",
              use_container_width=True, disabled=mf4_file_disabled)